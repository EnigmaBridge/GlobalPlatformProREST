group 'com.enigmabridge'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'spring-boot'

// Gretty is disabled for now: https://www.mkyong.com/spring-mvc/gradle-spring-4-mvc-hello-world-example-annotation/
//apply plugin: 'org.akhikhl.gretty'

// JDK 7
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    flatDir {
        dirs '../libs'
    }
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'ch.qos.logback:logback-core:1.1.3'
    compile 'org.slf4j:jcl-over-slf4j:1.7.5'
    compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.json:json:20160212'

    // GPPro dependency
    compile project(':gppro')

    // Testing
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.jayway.jsonpath:json-path'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}


// Gretty Embedded Jetty
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        //classpath 'org.akhikhl.gretty:gretty:+'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE'
    }
}


jar {
    baseName = 'gppro-rest'
    version =  '0.1.0'
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
    }

}

war {
    baseName = 'gppro-rest'
    version =  '0.1.0'
}


// Don't use Jetty8, even it's a servlet 3.0+ container,
// but not support non-jar WebApplicationInitializer scanning.
// It will cause "No Spring WebApplicationInitializer types detected on classpath"
//gretty {
//    port = 8080
//    contextPath = 'spring4'
//    servletContainer = 'jetty9' //tomcat7 or tomcat8
//}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task generateKeyStore(type: Exec) {
    workingDir "$projectDir"
    commandLine '../createKeystore.sh'
}

task copyBuilt(type: Copy) {
    dependsOn build
    from jar.archivePath
    into "../dist"
}

tasks.bootRun.dependsOn([generateKeyStore,copyBuilt]);

